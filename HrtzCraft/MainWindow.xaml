<Window x:Class="HrtzCraft.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:HrtzCraft.Views"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:HrtzCraft.Converters"
        xmlns:viewModels="clr-namespace:HrtzCraft.ViewModels"
        xmlns:properties="clr-namespace:HrtzCraft.Properties"
        mc:Ignorable="d" Style="{StaticResource StyleMainWindow}" WindowStartupLocation="CenterScreen"
        Title="MainWindow" x:Name="WindowMainWindow"
        Height="{Binding Source={x:Static properties:Settings.Default}, Path=Ui_WindowHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}"
        Width="{Binding Source={x:Static properties:Settings.Default}, Path=Ui_WindowWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}"
        Closing="MainWindow_OnClosing">

    <!-- Resources -->
    <Window.Resources>

        <!-- ViewModels -->
        <viewModels:NavigationViewModel x:Key="NavigationViewModel" />

        <!-- Pages DataTemplates -->
        <DataTemplate DataType="{x:Type viewModels:ConsoleViewModel}">
            <views:ConsoleView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:PluginsViewModel}">
            <views:PluginsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:BuildToolsViewModel}">
            <views:BuildToolsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:ServerConfigViewModel}">
            <views:ServerConfigView />
        </DataTemplate>

        <CollectionViewSource x:Key="GlobalPlayersViewSource" Source="{Binding Source={StaticResource GlobalPlayersViewModel}, Path=Instance.GlobalPlayersCollection}"
                              IsLiveGroupingRequested="True" IsLiveFilteringRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="IsOnline" Converter="{StaticResource IsOnlineToStringConverter}" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.LiveFilteringProperties>
                <system:String>Name</system:String>
            </CollectionViewSource.LiveFilteringProperties>
        </CollectionViewSource>

        <!-- Converters -->
        <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TriggerValue="False" IsHidden="False" />

        <!-- Colors -->
        <SolidColorBrush x:Key="BrushBgLeft" Color="#FF2C2724" />
    </Window.Resources>

    <Grid x:Name="GridRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="80" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Source={x:Static properties:Settings.Default}, Path=Ui_SideBarWidth, Converter={StaticResource GridLengthConverter}, ConverterParameter=sideBar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}"
                              MinWidth="{Binding Converter={StaticResource MinLengthConverter}, ConverterParameter=4, ElementName=GridRoot, Path=ActualWidth}" 
                              MaxWidth="{Binding Converter={StaticResource MaxLengthConverter}, ConverterParameter=2, ElementName=GridRoot, Path=ActualWidth}" />
            <ColumnDefinition Width="2.5*" />
        </Grid.ColumnDefinitions>

        <!-- 0/0: Menu Bar -->
        <Grid Grid.Row="0" Grid.Column="0" Background="{StaticResource BrushBgLeft}">
            <StackPanel Orientation="Horizontal">
                <ToggleButton Style="{StaticResource StyleAppMenuButton}" DataContext="{StaticResource ShellViewModel}" ContextMenuService.IsEnabled="False"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Command="{Binding Path=OpenAppMenuCommand}">
                    <ToggleButton.ContextMenu>
                        <ContextMenu Style="{StaticResource StyleAppMenuContextMenu}" ItemContainerStyle="{StaticResource StyleAppMenuContextMenuItem}">
                            <MenuItem Header="{Binding Path=CurrentVersion}" />
                            <MenuItem Header="Exit" Command="{Binding Path=CloseApplicationCommand}" />
                        </ContextMenu>
                    </ToggleButton.ContextMenu>
                </ToggleButton>
            </StackPanel>
        </Grid>

        <!-- 0/1: Page navigation buttons -->
        <Grid Grid.Row="0" Grid.Column="1">
            <ItemsControl DataContext="{StaticResource NavigationViewModel}" ItemsSource="{Binding Path=PageViewModelsCollection}" HorizontalAlignment="Right">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button x:Name="ButtonNavigationRoot" Style="{StaticResource StyleNavigationButton}" WindowChrome.IsHitTestVisibleInChrome="True" Content="{Binding Path=Name}"
                                                Command="{Binding Source={StaticResource NavigationViewModel}, Path=CommandChangePage}" CommandParameter="{Binding}" />
                        <DataTemplate.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource EqualityToBooleanConverter}">
                                        <Binding Path="Name" />
                                        <Binding Source="{StaticResource NavigationViewModel}" Path="CurrentPageViewModel.Name" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter TargetName="ButtonNavigationRoot" Property="Background" Value="#FF3B3B3B" />
                                <Setter TargetName="ButtonNavigationRoot" Property="Foreground" Value="White" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>

        <!-- 1/0: Server control -->
        <Grid Grid.Row="1" Grid.Column="0" Background="{StaticResource BrushBgLeft}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Control button -->
                <ToggleButton x:Name="ButtonServerControl" Style="{StaticResource StyleServerControlButton}" DataContext="{StaticResource ServerControlViewModel}"
                              Command="{Binding Path=StartServerCommand}" IsChecked="{Binding Source={StaticResource ServerConfigViewModel}, Path=Instance.Server.IsRunning, Mode=OneWay}"
                              VerticalAlignment="Center">
                    <ToggleButton.Content>
                        <Path Data="{StaticResource IconControlStart}" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}, Path=Foreground}"
                              Stretch="Uniform" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="RotateTransformServerControlButton" Angle="-45" />
                            </Path.RenderTransform>
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Source={StaticResource ServerConfigViewModel}, Path=Instance.Server.IsRunning}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource AnimationServerControlButtonOn}" />
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource AnimationServerControlButtonOff}" />
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </ToggleButton.Content>
                </ToggleButton>

                <!-- Control text -->
                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <TextBlock DataContext="{StaticResource ServerConfigViewModel}" Text="{Binding Path=Instance.Server.DisplayName}" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="#FFA7AEA7" TextWrapping="Wrap" FontSize="16" FontFamily="Segoe UI Semilight">
                        <!--
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Server.IsRunning}" Value="True">
                                        <Setter Property="Text" Value="ONLINE" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Server.IsRunning}" Value="False">
                                        <Setter Property="Text" Value="OFFLINE" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        -->
                    </TextBlock>

                    <TextBlock DataContext="{StaticResource ServerConfigViewModel}" Foreground="#FFA7AEA7" Visibility="{Binding Path=Server.IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Run Text="Players online:" />
                        <Run Text="{Binding Path=Server.PlayersOnline}" />
                        <Run Text="of" />
                        <Run Text="{Binding Path=Server.MaxPlayers}" />
                    </TextBlock>
                </StackPanel>

            </Grid>
        </Grid>

        <!-- 1/1: Current Page Header -->
        <Grid Grid.Row="1" Grid.Column="1">
            <TextBlock DataContext="{StaticResource NavigationViewModel}" Text="{Binding Path=CurrentPageViewModel.Name}" Foreground="SandyBrown" VerticalAlignment="Center"
                       FontFamily="Segoe UI Light" FontSize="29.333" Margin="25,0" HorizontalAlignment="Left" />
        </Grid>

        <!-- 2/0: Players ListBox -->
        <Grid Grid.Row="2" Grid.Column="0" Background="{StaticResource BrushBgLeft}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Search players box -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="1" Style="{StaticResource StyleSearchFilterTextBox}"
                         Text="{Binding ElementName=WindowMainWindow, Path=SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=50}"
                         Background="{x:Null}" BorderBrush="{x:Null}" />

                <ComboBox Grid.Column="2" Style="{StaticResource StylePlayersFilterDropDownComboBox}" ItemContainerStyle="{StaticResource StylePlayersFilterDropDownComboBoxItem}" DataContext="{StaticResource GlobalPlayersViewModel}">
                    <ComboBoxItem>
                        <ComboBoxItem.ContentTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource StyleGenericCheckBox}" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowBannedPlayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Content="Show Banned Players" Foreground="#FF838383" />
                            </DataTemplate>
                        </ComboBoxItem.ContentTemplate>
                    </ComboBoxItem>

                    <ComboBoxItem>
                        <ComboBoxItem.ContentTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource StyleGenericCheckBox}" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowWhitelistedPlayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Content="Show Whitelisted Players" Foreground="#FF838383" />
                            </DataTemplate>
                        </ComboBoxItem.ContentTemplate>
                    </ComboBoxItem>

                    <ComboBoxItem>
                        <ComboBoxItem.ContentTemplate>
                            <DataTemplate>
                                <CheckBox Style="{StaticResource StyleGenericCheckBox}" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowOpPlayers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           Content="Show Operators" Foreground="#FF838383" />
                            </DataTemplate>
                        </ComboBoxItem.ContentTemplate>
                    </ComboBoxItem>
                </ComboBox>

            </Grid>

            <!-- Players List Box -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ListBox x:Name="ListBoxGlobalPlayers" Style="{StaticResource StylePlayersListBox}" ItemContainerStyle="{StaticResource StylePlayersListBoxItem}"
                                         DataContext="{StaticResource GlobalPlayersViewModel}" ItemsSource="{Binding Source={StaticResource GlobalPlayersViewSource}}"
                                         SelectedItem="{Binding Path=SelectedPlayer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="-1" Margin="0,10,0,0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid x:Name="GridRoot">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsBanned}" Value="True" />
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowBannedPlayers}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsWhitelisted}" Value="True" />
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowWhitelistedPlayers}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsOperator}" Value="True" />
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=PlayerList_ShowOpPlayers}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Name -->
                                <TextBlock Text="{Binding Path=Name}" Padding="0,2,0,2"/>

                                <!-- Icons -->
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Viewbox Width="3" Margin="2,0" Visibility="{Binding Path=IsBanned, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Path x:Name="IconPlayerBanned" Data="{StaticResource IconPlayerBanned}" Stretch="Uniform">
                                            <Path.Style>
                                                <Style TargetType="{x:Type Path}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsBanned}" Value="True">
                                                            <Setter Property="Fill" Value="#FFCF4646" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </Viewbox>
                                    <Viewbox Width="12" Margin="2,0" Visibility="{Binding Path=IsOperator, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Path x:Name="IconPlayerOperator" Data="{StaticResource IconPlayerOperator}" Stretch="Uniform">
                                            <Path.Style>
                                                <Style TargetType="{x:Type Path}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsOperator}" Value="True">
                                                            <Setter Property="Fill" Value="#FFACAC11" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </Viewbox>
                                    <Viewbox Width="3" Margin="2,0" Visibility="{Binding Path=IsWhitelisted, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Path x:Name="IconPlayerWhitelisted" Data="{StaticResource IconPlayerWhitelisted}" Stretch="Uniform">
                                            <Path.Style>
                                                <Style TargetType="{x:Type Path}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsWhitelisted}" Value="True">
                                                            <Setter Property="Fill" Value="#FFC1BBB3" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </Viewbox>
                                </StackPanel>
                                
                                <!-- Tooltip -->
                                <!--
                                <Grid.ToolTip>
                                    <StackPanel>
                                        <TextBlock>
                                            <Run Text="{Binding Path=Name}" />
                                            <Run Text="got banned by" />
                                            <Run Text="{Binding Path=BanSource}" />
                                            <Run Text="for" />
                                            <Run Text="{Binding Path=BanReason}" />
                                            <Run Text="until" />
                                            <Run Text="{Binding Path=BanExpires}" />
                                        </TextBlock>
                                    </StackPanel>
                                </Grid.ToolTip>
                                -->
                                
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <!-- Grouping -->
                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander Style="{StaticResource StylePlayersListBoxExpander}" Margin="0,0,0,4" IsExpanded="True">
                                                    <Expander.Content>
                                                        <ItemsPresenter Margin="0,4,0,0" />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListBox.GroupStyle>

                    <!-- Context Menu -->
                    <ListBox.ContextMenu>
                        <ContextMenu Style="{StaticResource StylePlayerListContextMenu}" ItemContainerStyle="{StaticResource StylePlayerListContextMenuItem}"
                                     DataContext="{StaticResource GlobalPlayersViewModel}" Tag="{Binding Path=SelectedPlayer.Name}">

                            <!-- Whitelist -->
                            <MenuItem Command="{Binding Source={StaticResource ServerControlViewModel}, Path=SendCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StylePlayerListContextMenuItem}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsWhitelisted}" Value="True">
                                                <Setter Property="Header" Value="Remove from whitelist" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="whitelist remove " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsWhitelisted}" Value="False">
                                                <Setter Property="Header" Value="Add to whitelist" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="whitelist add " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>

                            <!-- OP -->
                            <MenuItem Command="{Binding Source={StaticResource ServerControlViewModel}, Path=SendCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StylePlayerListContextMenuItem}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsOperator}" Value="True">
                                                <Setter Property="Header" Value="Remove OP rights" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="deop " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsOperator}" Value="False">
                                                <Setter Property="Header" Value="Grant OP rights" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="op " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>

                            <!-- Ban -->
                            <MenuItem Command="{Binding Source={StaticResource ServerControlViewModel}, Path=SendCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StylePlayerListContextMenuItem}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsBanned}" Value="True">
                                                <Setter Property="Header" Value="Unban player" />
                                                <Setter Property="Command" Value="{Binding Source={StaticResource ServerControlViewModel}, Path=SendCommand}" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="pardon " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=SelectedPlayer.IsBanned}" Value="False">
                                                <Setter Property="Header" Value="Ban player" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MultiBindingValueToStringConverter}">
                                                            <Binding Source="ban " />
                                                            <Binding Path="SelectedPlayer.Name" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>

                        </ContextMenu>
                    </ListBox.ContextMenu>
                    
                </ListBox>
            </ScrollViewer>

        </Grid>

        <!-- 2/1: Page Content -->
        <Grid Grid.Row="2" Grid.Column="1">
            <ContentControl DataContext="{StaticResource NavigationViewModel}" Content="{Binding Path=CurrentPageViewModel}" />
        </Grid>

        <GridSplitter Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Width="4" Background="Transparent" />

    </Grid>
</Window>
